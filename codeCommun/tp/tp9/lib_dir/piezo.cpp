//==========================================================================================================//
//PLEASE READ THE FOLLOWING
//==========================================================================================================//

//There are three timer/counters in the atmega324pa

//They each have OCxA/B pins that are the output of the PWM generated by them
//The important part here is to understand their location depending on which ones you want.

//Piezo OCxA/OCxB pin locations

//description				pin
//(PCINT14/OC3A/MISO) 		PB6 
//(PCINT15/OC3B/SCK) 		PB7 	

//(PCINT28/XCK1/OC1B) 		PD4 
//(PCINT29/OC1A) 			PD5 

//What you pass in the piezo_init function is that location value

//

//==========================================================================================================//

#include "piezo.h"
#include <avr/io.h>
volatile uint8_t setup_value;

/*****************************************************************************
*
*   Function name : piezo_init
*
*   Returns :       void
*
*   Parameters :    uint8_t location_value (should just be PINB6, etc)
*
*   Purpose :       Set the timer/counter registers for the music pwm
*
*****************************************************************************/
void piezo_init(uint8_t location_value, uint8_t volume){
	setup_value = location_value;
	switch(setup_value){
		case PB6:
			DDRD |= _BV(DDB6); //OC1B as output
			OCR3A = volume;
   		   	break;
   		case PB7:
			DDRD |= _BV(DDB7); //OC1B as output
			OCR3A = volume;
   		    break;
   		case PD4: 
			DDRD |= _BV(DDD4); //OC1B as output
			OCR1B = volume;
   		    break;
   		case PD5:
			DDRD |= _BV(DDD5); //OC1B as output
			OCR1A = volume;
   		    break;
	}
	if(location_value == PB6 || location_value == PB7 ){
		TCCR3A |= _BV(COM3B1);  //Clear OC1A/OC1B on compare match
		TCCR3B |= _BV(WGM33) 	//mode 8, PWM, Phase and Frequency Correct (TOP value is ICR1)
	   		   |  _BV(CS31);
	}
	if(location_value == PD4 || location_value == PD5 ){
		TCCR1A |= _BV(COM1B1);  //Clear OC1A/OC1B on compare match
		TCCR1B |= _BV(WGM13) 	//mode 8, PWM, Phase and Frequency Correct (TOP value is ICR1)
	   		   |  _BV(CS11);
	}
}


/*****************************************************************************
*
*   Function name : piezo_init
*
*   Returns :       void
*
*   Parameters :    uint8_t volume (possible values: 0 - 100)
*
*   Purpose :       Set the timer/counter registers for the music pwm
*
*****************************************************************************/
void setVolume(uint8_t volume){
	switch(setup_value){
		case PB6:
			OCR3A = volume;
   		   	break;
   		case PB7:
			OCR3B = volume;
   		    break;
   		case PD4: 
			OCR1B = volume;
   		    break;
   		case PD5:
			OCR1A = volume;
   		    break;
	}
}

/*****************************************************************************
*
*   Function name : piezo_init
*
*   Returns :       void
*
*   Parameters :    uint8_t volume (possible values: 0 - 100)
*
*   Purpose :       Set the timer/counter registers for the music pwm
*
*****************************************************************************/