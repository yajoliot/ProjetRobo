Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o (exit)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                              pr1.o (__do_copy_data)
/usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                              pr1.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000003 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
LOAD pr1.o
LOAD memoire_24.o
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libm.a
START GROUP
LOAD /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/libatmega324pa.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000003]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x512
 *(.vectors)
 .vectors       0x0000000000000000       0x7c /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000007c                . = ALIGN (0x2)
                0x000000000000007c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000007c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000007c                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x000000000000007c                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000007c                __ctors_start = .
 *(.ctors)
                0x000000000000007c                __ctors_end = .
                0x000000000000007c                __dtors_start = .
 *(.dtors)
                0x000000000000007c                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x000000000000007c        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x000000000000007c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000007c        0xc /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000088       0x16 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000088                __do_copy_data
 .init4         0x000000000000009e       0x10 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000009e                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000ae        0x8 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 *(.init9)
 *(.text)
 .text          0x00000000000000b6        0x4 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
                0x00000000000000b6                __vector_22
                0x00000000000000b6                __vector_28
                0x00000000000000b6                __vector_1
                0x00000000000000b6                __vector_24
                0x00000000000000b6                __vector_12
                0x00000000000000b6                __bad_interrupt
                0x00000000000000b6                __vector_6
                0x00000000000000b6                __vector_3
                0x00000000000000b6                __vector_23
                0x00000000000000b6                __vector_30
                0x00000000000000b6                __vector_25
                0x00000000000000b6                __vector_11
                0x00000000000000b6                __vector_13
                0x00000000000000b6                __vector_17
                0x00000000000000b6                __vector_19
                0x00000000000000b6                __vector_7
                0x00000000000000b6                __vector_27
                0x00000000000000b6                __vector_5
                0x00000000000000b6                __vector_4
                0x00000000000000b6                __vector_9
                0x00000000000000b6                __vector_2
                0x00000000000000b6                __vector_21
                0x00000000000000b6                __vector_15
                0x00000000000000b6                __vector_29
                0x00000000000000b6                __vector_8
                0x00000000000000b6                __vector_26
                0x00000000000000b6                __vector_14
                0x00000000000000b6                __vector_10
                0x00000000000000b6                __vector_16
                0x00000000000000b6                __vector_18
                0x00000000000000b6                __vector_20
 .text          0x00000000000000ba       0x32 pr1.o
                0x00000000000000ba                _Z10antiRebondv
 .text          0x00000000000000ec      0x352 memoire_24.o
                0x00000000000000ec                _ZN13Memoire24CXXXD2Ev
                0x00000000000000ec                _ZN13Memoire24CXXXD1Ev
                0x00000000000000ee                _ZN13Memoire24CXXX4initEv
                0x0000000000000100                _ZN13Memoire24CXXXC2Ev
                0x0000000000000100                _ZN13Memoire24CXXXC1Ev
                0x000000000000010a                _ZN13Memoire24CXXX12choisir_bancEh
                0x0000000000000120                _ZN13Memoire24CXXX7lectureEjPh
                0x00000000000001e2                _ZN13Memoire24CXXX7lectureEjPhh
                0x00000000000002aa                _ZN13Memoire24CXXX8ecritureEjh
                0x000000000000033a                _ZN13Memoire24CXXX11ecrire_pageEjPhh
                0x00000000000003f8                _ZN13Memoire24CXXX8ecritureEjPhh
 .text          0x000000000000043e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text          0x000000000000043e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x000000000000043e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000043e                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x000000000000043e       0xd0 pr1.o
                0x000000000000043e                main
 .text.libgcc.mul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                0x000000000000050e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000050e        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                0x000000000000050e                exit
                0x000000000000050e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000050e        0x4 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000512                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000512                _etext = .

.data           0x0000000000800100       0x2e load address 0x0000000000000512
                0x0000000000800100                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .data          0x0000000000800100        0x0 pr1.o
 .data          0x0000000000800100        0x1 memoire_24.o
                0x0000000000800100                _ZN13Memoire24CXXX22m_adresse_peripheriqueE
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800101        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800101       0x2d pr1.o
 *(.rodata*)
 *(.gnu.linkonce.r*)
                0x000000000080012e                . = ALIGN (0x2)
                0x000000000080012e                _edata = .
                0x000000000080012e                PROVIDE (__data_end = .)

.bss            0x000000000080012e        0x2
                0x000000000080012e                PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x000000000080012e        0x0 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o
 .bss           0x000000000080012e        0x2 pr1.o
                0x000000000080012e                etat
 .bss           0x0000000000800130        0x0 memoire_24.o
 .bss           0x0000000000800130        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800130        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800130        0x0 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800130                PROVIDE (__bss_end = .)
                0x0000000000000512                __data_load_start = LOADADDR (.data)
                0x0000000000000540                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800130        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800130                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x1818
 *(.stab)
 .stab          0x0000000000000000      0x75c pr1.o
 .stab          0x000000000000075c      0xec4 memoire_24.o
                                        0xed0 (size before relaxing)
 .stab          0x0000000000001620       0x6c /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_exit.o)
                                         0x78 (size before relaxing)
 .stab          0x000000000000168c       0xd8 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_copy_data.o)
                                         0xe4 (size before relaxing)
 .stab          0x0000000000001764       0xb4 /usr/lib/gcc/avr/7.2.0/avr5/libgcc.a(_clear_bss.o)
                                         0xc0 (size before relaxing)

.stabstr        0x0000000000000000     0x15f7
 *(.stabstr)
 .stabstr       0x0000000000000000     0x15f7 pr1.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x21
 *(.comment)
 .comment       0x0000000000000000       0x21 pr1.o
                                         0x22 (size before relaxing)
 .comment       0x0000000000000021       0x22 memoire_24.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x40
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x40 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x6cc
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x6cc /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_abbrev   0x0000000000000000      0x66e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x66e /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x255
 *(.debug_str)
 .debug_str     0x0000000000000000      0x255 /usr/lib/gcc/avr/7.2.0/../../../../avr/lib/avr5/crtatmega324pa.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(test32bits.out elf32-avr)
LOAD linker stubs
